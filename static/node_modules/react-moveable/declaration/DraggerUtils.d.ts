import MoveableManager from "./MoveableManager";
import { MoveableManagerState, GroupableProps, ResizableProps } from "./types";
export declare function setDragStart(moveable: MoveableManager<any>, { datas }: any): void;
export declare function getDragDist({ datas, distX, distY }: any, isBefore?: boolean): number[];
export declare function caculateTransformOrigin(transformOrigin: string[], width: number, height: number, prevWidth?: number, prevHeight?: number, prevOrigin?: number[]): number[];
export declare function getPosIndexesByDirection(direction: number[]): number[];
export declare function getPosesByDirection(poses: number[][], direction: number[]): number[][];
export declare function getPosByDirection(poses: number[][], direction: number[]): number[];
export declare function getPosByReverseDirection([pos1, pos2, pos3, pos4]: number[][], direction: number[]): number[];
export declare function getNextMatrix(offsetMatrix: number[], targetMatrix: number[], origin: number[], n: number): number[];
export declare function scaleMatrix(state: MoveableManagerState<any>, scale: number[]): number[];
export declare function getScaleDist(moveable: MoveableManager<any>, scale: number[], direction: number[], dragClient?: number[]): number[];
export declare function getResizeDist(moveable: MoveableManager<GroupableProps>, width: number, height: number, direction: number[], fixedPosition: number[], transformOrigin: string[]): number[];
export declare function getStartDirection(moveable: MoveableManager<ResizableProps>, direction: number[]): number[];
export declare function getFixedPosition(moveable: MoveableManager<ResizableProps>, direction: number[]): number[];
