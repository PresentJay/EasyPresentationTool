{"version":3,"file":"preact.module.js","sources":["../src/constants.js","../src/options.js","../src/create-element.js","../src/component.js","../src/render.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js","../src/diff/catch-error.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n","import { _catchError } from './diff/catch-error';\n\n/** @type {import('./internal').Options}  */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import options from './options';\nimport { assign } from './util';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tprops = assign({}, props);\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (let i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tprops.children = children;\n\t}\n\n\t// \"type\" may be undefined during development. The check is needed so that\n\t// we can display a nice error message with our debug helpers\n\tif (type != null && type.defaultProps != null) {\n\t\tfor (let i in type.defaultProps) {\n\t\t\tif (props[i] === undefined) props[i] = type.defaultProps[i];\n\t\t}\n\t}\n\tlet ref = props.ref;\n\tlet key = props.key;\n\tif (ref != null) delete props.ref;\n\tif (key != null) delete props.key;\n\n\treturn createVNode(type, props, key, ref);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_lastDomChild: null,\n\t\t_component: null,\n\t\tconstructor: undefined\n\t};\n\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\tupdate = update(s, this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tthis._force = false;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type === 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\tassign({}, vnode),\n\t\t\tcomponent._context,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tnull,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet q = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty && (c._dirty = true) && q.push(c) === 1) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet p;\n\tq.sort((a, b) => b._vnode._depth - a._vnode._depth);\n\twhile ((p = q.pop())) {\n\t\t// forceUpdate's callback argument is reused here to indicate a non-forced update.\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\treturn context;\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\tnewParentVNode,\n\toldParentVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti = 0;\n\tnewParentVNode._children = toChildArray(\n\t\tnewParentVNode._children,\n\t\tchildVNode => {\n\t\t\tif (childVNode != null) {\n\t\t\t\tchildVNode._parent = newParentVNode;\n\t\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t\t// (holes).\n\t\t\t\toldVNode = oldChildren[i];\n\n\t\t\t\tif (\n\t\t\t\t\toldVNode === null ||\n\t\t\t\t\t(oldVNode &&\n\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t\t\t) {\n\t\t\t\t\toldChildren[i] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\toldVNode &&\n\t\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toldVNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\t\tnewDom = diff(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\tcontext,\n\t\t\t\t\tisSvg,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tcommitQueue,\n\t\t\t\t\toldDom,\n\t\t\t\t\tisHydrating\n\t\t\t\t);\n\n\t\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t\tif (!refs) refs = [];\n\t\t\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t\t\t}\n\n\t\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\t\tif (newDom != null) {\n\t\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childVNode._lastDomChild != null) {\n\t\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t\t// have a non-null _lastDomChild. Continue the diff from the end of\n\t\t\t\t\t\t// this Fragment's DOM tree.\n\t\t\t\t\t\tnewDom = childVNode._lastDomChild;\n\n\t\t\t\t\t\t// Eagerly cleanup _lastDomChild. We don't need to persist the value because\n\t\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t\t// diffing Components and Fragments.\n\t\t\t\t\t\tchildVNode._lastDomChild = null;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\texcessDomChildren == oldVNode ||\n\t\t\t\t\t\tnewDom != oldDom ||\n\t\t\t\t\t\tnewDom.parentNode == null\n\t\t\t\t\t) {\n\t\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tsibDom = oldDom, j = 0;\n\t\t\t\t\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildrenLength;\n\t\t\t\t\t\t\t\tj += 2\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t\t// updated properly.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\toldDom = newDom.nextSibling;\n\n\t\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t\t// At this point, if childVNode._lastDomChild existed, then\n\t\t\t\t\t\t// newDom = childVNode._lastDomChild per line 101. Else it is\n\t\t\t\t\t\t// the same as childVNode._dom, meaning this component returned\n\t\t\t\t\t\t// only a single DOM node\n\t\t\t\t\t\tnewParentVNode._lastDomChild = newDom;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t\treturn childVNode;\n\t\t}\n\t);\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type !== 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children == null || typeof children === 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t} else if (Array.isArray(children)) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t} else if (!callback) {\n\t\tflattened.push(children);\n\t} else if (typeof children === 'string' || typeof children === 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null)));\n\t} else if (children._dom != null || children._component != null) {\n\t\tflattened.push(\n\t\t\tcallback(createVNode(children.type, children.props, children.key, null))\n\t\t);\n\t} else {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (!(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (\n\t\ttypeof value === 'number' &&\n\t\tIS_NON_DIMENSIONAL.test(key) === false\n\t) {\n\t\tstyle[key] = value + 'px';\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else {\n\t\tstyle[key] = value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nfunction setProperty(dom, name, value, oldValue, isSvg) {\n\tif (isSvg) {\n\t\tif (name === 'className') {\n\t\t\tname = 'class';\n\t\t}\n\t} else if (name === 'class') {\n\t\tname = 'className';\n\t}\n\n\tif (name === 'key' || name === 'children') {\n\t} else if (name === 'style') {\n\t\tconst s = dom.style;\n\n\t\tif (typeof value === 'string') {\n\t\t\ts.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue === 'string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tlet useCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tlet nameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t} else {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (\n\t\ttypeof value !== 'function' &&\n\t\tname !== 'dangerouslySetInnerHTML'\n\t) {\n\t\tif (name !== (name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (value == null || value === false) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren, toChildArray } from './children';\nimport { diffProps } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType === 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && context[tmp._id];\n\t\t\tlet cctx = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: context;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, cctx); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, cctx);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = cctx;\n\t\t\t\tc._context = context;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc._force == null &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\tc.shouldComponentUpdate(newProps, c._nextState, cctx) === false\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) {\n\t\t\t\t\t\t\tnewVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, cctx);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = cctx;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = toChildArray(\n\t\t\t\tisTopLevelFragment ? tmp.props.children : tmp\n\t\t\t);\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tcontext = assign(assign({}, context), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = null;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} context The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tcontext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (dom == null && excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t(newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(newVNode.type);\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (newVNode.type === null) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren[excessDomChildren.indexOf(dom)] = null;\n\t\t}\n\n\t\tif (oldProps !== newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else if (newVNode !== oldVNode) {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\tnewVNode._children = newVNode.props.children;\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (!newHtml) {\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tcontext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\tnewProps.value !== undefined &&\n\t\t\t\tnewProps.value !== dom.value\n\t\t\t) {\n\t\t\t\tdom.value = newProps.value == null ? '' : newProps.value;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\tnewProps.checked !== undefined &&\n\t\t\t\tnewProps.checked !== dom.checked\n\t\t\t) {\n\t\t\t\tdom.checked = newProps.checked;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tapplyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type !== 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\tvnode._dom = vnode._lastDomChild = null;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length > 2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\treturn createVNode(\n\t\tvnode.type,\n\t\tprops,\n\t\tprops.key || vnode.key,\n\t\tprops.ref || vnode.ref\n\t);\n}\n","import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tcomponent.constructor &&\n\t\t\t\t\tcomponent.constructor.getDerivedStateFromError != null\n\t\t\t\t) {\n\t\t\t\t\tcomponent.setState(\n\t\t\t\t\t\tcomponent.constructor.getDerivedStateFromError(error)\n\t\t\t\t\t);\n\t\t\t\t} else if (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\treturn enqueueRender((component._pendingError = component));\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"],"names":["options","isValidElement","q","defer","prevDebounce","IS_HYDRATE","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","ref","key","arguments","length","push","defaultProps","undefined","createVNode","vnode","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","createRef","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","_dirty","debounceRendering","process","p","component","commitQueue","newDom","oldDom","parentDom","sort","a","b","_vnode","pop","_parentDom","diff","_context","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","isSvg","excessDomChildren","isHydrating","j","oldVNode","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","outer","appendChild","nextSibling","insertBefore","value","unmount","applyRef","callback","flattened","Array","isArray","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","s","useCapture","nameLower","cssText","replace","toLowerCase","slice","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","e","event","newVNode","tmp","isNew","oldState","snapshot","clearProcessingException","provider","cctx","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","prototype","render","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","_force","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","_render","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","_catchError","root","_commit","some","cb","call","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","_root","cloneElement","createContext","defaultValue","ctx","Consumer","Provider","subs","_this","_props","old","splice","error","getDerivedStateFromError","setState","componentDidCatch","update","forceUpdate","Promise","then","bind","resolve","setTimeout"],"mappings":"AAAO,ICGDA,ECoFOC,EC4ETC,EAQEC,EAcFC,ECpLEC,ECHKC,ELFEC,EAAY,GACZC,EAAY,GACZC,EAAqB,8DMK3B,SAASC,EAAOC,EAAKC,OACtB,IAAIN,KAAKM,EAAOD,EAAIL,GAAKM,EAAMN,YAU9B,SAASO,EAAWC,OACtBC,EAAaD,EAAKC,WAClBA,GAAYA,EAAWC,YAAYF,GJTxC,SAAgBG,EAAcC,EAAMN,EAAOO,GAA3C,IAMWb,EAWAA,EAINc,EACAC,iBArBJT,EAAQF,EAAO,GAAIE,GAEfU,UAAUC,OAAS,MACtBJ,EAAW,CAACA,GAEHb,EAAI,EAAGA,EAAIgB,UAAUC,OAAQjB,IACrCa,EAASK,KAAKF,EAAUhB,OAGV,MAAZa,IACHP,EAAMO,SAAWA,GAKN,MAARD,GAAqC,MAArBA,EAAKO,iBACfnB,KAAKY,EAAKO,kBACDC,IAAbd,EAAMN,KAAkBM,EAAMN,GAAKY,EAAKO,aAAanB,WAIvDe,EAAMT,EAAMS,IACL,OAFPD,EAAMR,EAAMQ,aAEQR,EAAMQ,IACnB,MAAPC,UAAoBT,EAAMS,IAEvBM,EAAYT,EAAMN,EAAOS,EAAKD,GAetC,SAAgBO,EAAYT,EAAMN,EAAOS,EAAKD,OAGvCQ,EAAQ,CACbV,KAAAA,EACAN,MAAAA,EACAS,IAAAA,EACAD,IAAAA,EACAS,IAAW,KACXC,GAAS,KACTC,IAAQ,EACRC,IAAM,KACNC,IAAe,KACfC,IAAY,KACZC,iBAAaT,UAGV1B,EAAQ4B,OAAO5B,EAAQ4B,MAAMA,GAE1BA,EAGR,SAAgBQ,UACR,GAGD,SAASC,EAASzB,UACjBA,EAAMO,SCnEP,SAASmB,EAAU1B,EAAO2B,QAC3B3B,MAAQA,OACR2B,QAAUA,EAsET,SAASC,EAAcZ,EAAOa,MAClB,MAAdA,SAEIb,EAAME,GACVU,EAAcZ,EAAME,GAASF,EAAME,GAAQD,IAAUa,QAAQd,GAAS,GACtE,aAGAe,EACGF,EAAab,EAAMC,IAAUN,OAAQkB,OAG5B,OAFfE,EAAUf,EAAMC,IAAUY,KAEa,MAAhBE,EAAQX,WAIvBW,EAAQX,UASY,mBAAfJ,EAAMV,KAAsBsB,EAAcZ,GAAS,KAmClE,SAASgB,EAAwBhB,GAAjC,IAGWtB,EACJuC,KAHyB,OAA1BjB,EAAQA,EAAME,KAAwC,MAApBF,EAAMM,IAAoB,KAChEN,EAAMI,IAAOJ,EAAMM,IAAWY,KAAO,KAC5BxC,EAAI,EAAGA,EAAIsB,EAAMC,IAAUN,OAAQjB,OAE9B,OADTuC,EAAQjB,EAAMC,IAAUvB,KACO,MAAduC,EAAMb,IAAc,CACxCJ,EAAMI,IAAOJ,EAAMM,IAAWY,KAAOD,EAAMb,iBAKtCY,EAAwBhB,IAoC1B,SAASmB,EAAcC,KAE1BA,EAAEC,MAAWD,EAAEC,KAAS,IAAuB,IAAd/C,EAAEsB,KAAKwB,IAC1C5C,IAAiBJ,EAAQkD,sBAEzB9C,EAAeJ,EAAQkD,oBACN/C,GAAOgD,GAK1B,SAASA,QACJC,EAvFoBC,EAMnBC,EACAC,EAND3B,EACH4B,EACAC,MAqFDvD,EAAEwD,KAAK,SAACC,EAAGC,UAAMA,EAAEC,IAAO9B,IAAS4B,EAAEE,IAAO9B,MACpCqB,EAAIlD,EAAE4D,OAETV,EAAEH,MArFFK,OAAAA,EACAC,OAAAA,EALJC,GADG5B,GADoByB,EA2FOD,GA1FTS,KACN7B,KACfyB,EAAYJ,EAAUU,OAGlBT,EAAc,GACdC,EAASS,EACZP,EACA7B,EACAlB,EAAO,GAAIkB,GACXyB,EAAUY,SACoBvC,IAA9B+B,EAAUS,gBACV,KACAZ,EACU,MAAVE,EAAiBhB,EAAcZ,GAAS4B,GAEzCW,EAAWb,EAAa1B,GAEpB2B,GAAUC,GACbZ,EAAwBhB,KI/G3B,SAAgBwC,EACfX,EACAY,EACAC,EACA/B,EACAgC,EACAC,EACAlB,EACAE,EACAiB,GATD,IAWKnE,EAAGoE,EAAGC,EAAUpB,EAAQqB,EAAQC,EAAeC,EAI/CC,EAAeT,GAAkBA,EAAezC,KAAcrB,EAE9DwE,EAAoBD,EAAYxD,UAMhCiC,GAAUjD,IAEZiD,EADwB,MAArBgB,EACMA,EAAkB,GACjBQ,EACDxC,EAAc8B,EAAgB,GAE9B,MAIXhE,EAAI,EACJ+D,EAAexC,IAAYoD,EAC1BZ,EAAexC,IACf,SAAAqD,MACmB,MAAdA,EAAoB,IACvBA,EAAWpD,GAAUuC,EACrBa,EAAWnD,IAASsC,EAAetC,IAAS,EAS9B,QAHd4C,EAAWI,EAAYzE,KAIrBqE,GACAO,EAAW7D,KAAOsD,EAAStD,KAC3B6D,EAAWhE,OAASyD,EAASzD,KAE9B6D,EAAYzE,QAAKoB,WAIZgD,EAAI,EAAGA,EAAIM,EAAmBN,IAAK,KACvCC,EAAWI,EAAYL,KAKtBQ,EAAW7D,KAAOsD,EAAStD,KAC3B6D,EAAWhE,OAASyD,EAASzD,KAC5B,CACD6D,EAAYL,QAAKhD,QAGlBiD,EAAW,QAObpB,EAASS,EACRP,EACAyB,EALDP,EAAWA,GAAYpE,EAOtBgC,EACAgC,EACAC,EACAlB,EACAE,EACAiB,IAGIC,EAAIQ,EAAW9D,MAAQuD,EAASvD,KAAOsD,IACtCI,IAAMA,EAAO,IACdH,EAASvD,KAAK0D,EAAKtD,KAAKmD,EAASvD,IAAK,KAAM8D,GAChDJ,EAAKtD,KAAKkD,EAAGQ,EAAWhD,KAAcqB,EAAQ2B,IAIjC,MAAV3B,EAAgB,IACE,MAAjBsB,IACHA,EAAgBtB,GAGe,MAA5B2B,EAAWjD,IAIdsB,EAAS2B,EAAWjD,IAKpBiD,EAAWjD,IAAgB,UACrB,GACNuC,GAAqBG,GACrBpB,GAAUC,GACW,MAArBD,EAAOxC,WACN,CAKDoE,EAAO,GAAc,MAAV3B,GAAkBA,EAAOzC,aAAe0C,EAClDA,EAAU2B,YAAY7B,OAChB,KAGLqB,EAASpB,EAAQkB,EAAI,GACpBE,EAASA,EAAOS,cAAgBX,EAAIM,EACrCN,GAAK,KAEDE,GAAUrB,QACP4B,EAGR1B,EAAU6B,aAAa/B,EAAQC,GAaL,UAAvBa,EAAenD,OAClBuC,EAAU8B,MAAQ,IAIpB/B,EAASD,EAAO8B,YAEkB,mBAAvBhB,EAAenD,OAKzBmD,EAAepC,IAAgBsB,WAKlCjD,IACO4E,IAITb,EAAerC,IAAO6C,EAGG,MAArBL,GAA4D,mBAAxBH,EAAenD,SACjDZ,EAAIkE,EAAkBjD,OAAQjB,KACN,MAAxBkE,EAAkBlE,IAAYO,EAAW2D,EAAkBlE,QAK5DA,EAAI0E,EAAmB1E,KACL,MAAlByE,EAAYzE,IAAYkF,EAAQT,EAAYzE,GAAIyE,EAAYzE,OAI7DwE,MACExE,EAAI,EAAGA,EAAIwE,EAAKvD,OAAQjB,IAC5BmF,EAASX,EAAKxE,GAAIwE,IAAOxE,GAAIwE,IAAOxE,IAcvC,SAAgB2E,EAAa9D,EAAUuE,EAAUC,MAC/B,MAAbA,IAAmBA,EAAY,IAEnB,MAAZxE,GAAwC,kBAAbA,EAC1BuE,GAAUC,EAAUnE,KAAKkE,EAAS,YAChC,GAAIE,MAAMC,QAAQ1E,OACnB,IAAIb,EAAI,EAAGA,EAAIa,EAASI,OAAQjB,IACpC2E,EAAa9D,EAASb,GAAIoF,EAAUC,QAKrCA,EAAUnE,KAHCkE,EAGIA,EADe,iBAAbvE,GAA6C,iBAAbA,EACzBQ,EAAY,KAAMR,EAAU,KAAM,MAC/B,MAAjBA,EAASa,KAAuC,MAAvBb,EAASe,IAElCP,EAAYR,EAASD,KAAMC,EAASP,MAAOO,EAASE,IAAK,MAG3CF,GARTA,UAWTwE,ECxOD,SAASG,EAAUC,EAAKC,EAAUC,EAAU1B,EAAO2B,OACrD5F,MAECA,KAAK2F,EACH3F,KAAK0F,GACVG,EAAYJ,EAAKzF,EAAG,KAAM2F,EAAS3F,GAAIiE,OAIpCjE,KAAK0F,EAENE,GAAiC,mBAAfF,EAAS1F,IACvB,UAANA,GACM,YAANA,GACA2F,EAAS3F,KAAO0F,EAAS1F,IAEzB6F,EAAYJ,EAAKzF,EAAG0F,EAAS1F,GAAI2F,EAAS3F,GAAIiE,GAKjD,SAAS6B,EAASC,EAAOhF,EAAKkE,GACd,MAAXlE,EAAI,GACPgF,EAAMF,YAAY9E,EAAKkE,GAKvBc,EAAMhF,GAHW,iBAAVkE,IAC0B,IAAjC9E,EAAmB6F,KAAKjF,GAEXkE,EAAQ,KACF,MAATA,EACG,GAEAA,EAYf,SAASY,EAAYJ,EAAKQ,EAAMhB,EAAOiB,EAAUjC,GAAjD,IAWQkC,EAWKnG,EAQAA,EAUPoG,EACAC,KAxCDpC,EACU,cAATgC,IACHA,EAAO,SAEW,UAATA,IACVA,EAAO,aAGK,QAATA,GAA2B,aAATA,QACf,GAAa,UAATA,KACJE,EAAIV,EAAIM,MAEO,iBAAVd,EACVkB,EAAEG,QAAUrB,MACN,IACkB,iBAAbiB,IACVC,EAAEG,QAAU,GACZJ,EAAW,MAGRA,MACMlG,KAAKkG,EACPjB,GAASjF,KAAKiF,GACnBa,EAASK,EAAGnG,EAAG,OAKdiF,MACMjF,KAAKiF,EACRiB,GAAYjB,EAAMjF,KAAOkG,EAASlG,IACtC8F,EAASK,EAAGnG,EAAGiF,EAAMjF,QAOL,MAAZiG,EAAK,IAA0B,MAAZA,EAAK,IAC5BG,EAAaH,KAAUA,EAAOA,EAAKM,QAAQ,WAAY,KACvDF,EAAYJ,EAAKO,cACrBP,GAAQI,KAAaZ,EAAMY,EAAYJ,GAAMQ,MAAM,GAE/CxB,GACEiB,GAAUT,EAAIiB,iBAAiBT,EAAMU,EAAYP,IACrDX,EAAImB,IAAenB,EAAImB,EAAa,KAAKX,GAAQhB,GAElDQ,EAAIoB,oBAAoBZ,EAAMU,EAAYP,IAGlC,SAATH,GACS,YAATA,GAGS,SAATA,IACChC,GACDgC,KAAQR,EAERA,EAAIQ,GAAiB,MAAThB,EAAgB,GAAKA,EAEhB,mBAAVA,GACE,4BAATgB,IAEIA,KAAUA,EAAOA,EAAKM,QAAQ,WAAY,KAChC,MAATtB,IAA2B,IAAVA,EACpBQ,EAAIqB,kBACH,+BACAb,EAAKO,eAGNf,EAAIsB,eACH,+BACAd,EAAKO,cACLvB,GAGiB,MAATA,IAA2B,IAAVA,EAC3BQ,EAAIuB,gBAAgBf,GAEpBR,EAAIwB,aAAahB,EAAMhB,IAU1B,SAAS0B,EAAWO,QACdN,EAAWM,EAAEtG,MAAMlB,EAAQyH,MAAQzH,EAAQyH,MAAMD,GAAKA,GC3H5D,SAAgBxD,EACfP,EACAiE,EACA/C,EACApC,EACAgC,EACAC,EACAlB,EACAE,EACAiB,GATD,IAWKkD,EAWE3E,EAAG4E,EAAO3B,EAAU4B,EAAUC,EAAUC,EACxC/B,EAKAgC,EACAC,EAjBLC,EAAUR,EAASxG,aAISQ,IAAzBgG,EAASvF,YAA2B,OAAO,MAE1CwF,EAAM3H,EAAQmI,MAAQR,EAAID,OAG9BvC,EAAO,GAAuB,mBAAZ+C,EAAwB,IAErClC,EAAW0B,EAAS9G,MAKpBoH,GADJL,EAAMO,EAAQE,cACQ7F,EAAQoF,EAAIU,KAC9BJ,EAAON,EACRK,EACCA,EAASpH,MAAM2E,MACfoC,EAAIW,GACL/F,EAGCoC,EAASzC,IAEZ6F,GADA/E,EAAI0E,EAASxF,IAAayC,EAASzC,KACNqG,GAAuBvF,EAAEwF,KAGlD,cAAeN,GAAWA,EAAQO,UAAUC,OAC/ChB,EAASxF,IAAac,EAAI,IAAIkF,EAAQlC,EAAUiC,IAEhDP,EAASxF,IAAac,EAAI,IAAIV,EAAU0D,EAAUiC,GAClDjF,EAAEb,YAAc+F,EAChBlF,EAAE0F,OAASC,GAERX,GAAUA,EAASY,IAAI5F,GAE3BA,EAAEpC,MAAQoF,EACLhD,EAAE6F,QAAO7F,EAAE6F,MAAQ,IACxB7F,EAAET,QAAU0F,EACZjF,EAAEiB,IAAW1B,EACbqF,EAAQ5E,EAAEC,KAAS,EACnBD,EAAE8F,IAAmB,IAIF,MAAhB9F,EAAE+F,MACL/F,EAAE+F,IAAa/F,EAAE6F,OAEsB,MAApCX,EAAQc,2BACPhG,EAAE+F,KAAc/F,EAAE6F,QACrB7F,EAAE+F,IAAarI,EAAO,GAAIsC,EAAE+F,MAG7BrI,EACCsC,EAAE+F,IACFb,EAAQc,yBAAyBhD,EAAUhD,EAAE+F,OAI/C9C,EAAWjD,EAAEpC,MACbiH,EAAW7E,EAAE6F,MAGTjB,EAEkC,MAApCM,EAAQc,0BACgB,MAAxBhG,EAAEiG,oBAEFjG,EAAEiG,qBAGwB,MAAvBjG,EAAEkG,mBACLlG,EAAE8F,IAAiBtH,KAAKwB,EAAEkG,uBAErB,IAE+B,MAApChB,EAAQc,0BACI,MAAZhG,EAAEmG,KAC6B,MAA/BnG,EAAEoG,2BAEFpG,EAAEoG,0BAA0BpD,EAAUiC,IAIrCjF,EAAEmG,KACwB,MAA3BnG,EAAEqG,wBACwD,IAA1DrG,EAAEqG,sBAAsBrD,EAAUhD,EAAE+F,IAAYd,GAC/C,KACDjF,EAAEpC,MAAQoF,EACVhD,EAAE6F,MAAQ7F,EAAE+F,IACZ/F,EAAEC,KAAS,EACXD,EAAEa,IAAS6D,EACXA,EAAS1F,IAAO2C,EAAS3C,IACzB0F,EAAS7F,IAAY8C,EAAS9C,IAC1BmB,EAAE8F,IAAiBvH,QACtB+B,EAAY9B,KAAKwB,GAEb2E,EAAM,EAAGA,EAAMD,EAAS7F,IAAUN,OAAQoG,IAC1CD,EAAS7F,IAAU8F,KACtBD,EAAS7F,IAAU8F,GAAK7F,GAAU4F,SAG9BvC,EAGsB,MAAzBnC,EAAEsG,qBACLtG,EAAEsG,oBAAoBtD,EAAUhD,EAAE+F,IAAYd,GAGnB,MAAxBjF,EAAEuG,oBACLvG,EAAE8F,IAAiBtH,KAAK,WACvBwB,EAAEuG,mBAAmBtD,EAAU4B,EAAUC,KAK5C9E,EAAET,QAAU0F,EACZjF,EAAEpC,MAAQoF,EACVhD,EAAE6F,MAAQ7F,EAAE+F,KAEPpB,EAAM3H,EAAQwJ,MAAU7B,EAAID,GAEjC1E,EAAEC,KAAS,EACXD,EAAEa,IAAS6D,EACX1E,EAAEe,IAAaN,EAEfkE,EAAM3E,EAAE0F,OAAO1F,EAAEpC,MAAOoC,EAAE6F,MAAO7F,EAAET,SAGnCmF,EAAS7F,IAAYoD,EADb,MAAP0C,GAAeA,EAAIzG,MAAQmB,GAAuB,MAAXsF,EAAItG,IAEtBsG,EAAI/G,MAAMO,SAAWwG,GAGlB,MAArB3E,EAAEyG,kBACLlH,EAAU7B,EAAOA,EAAO,GAAI6B,GAAUS,EAAEyG,oBAGpC7B,GAAsC,MAA7B5E,EAAE0G,0BACf5B,EAAW9E,EAAE0G,wBAAwBzD,EAAU4B,IAGhDzD,EACCX,EACAiE,EACA/C,EACApC,EACAgC,EACAC,EACAlB,EACAE,EACAiB,GAGDzB,EAAEF,KAAO4E,EAAS1F,IAEdgB,EAAE8F,IAAiBvH,QACtB+B,EAAY9B,KAAKwB,GAGd+E,IACH/E,EAAEwF,IAAgBxF,EAAEuF,GAAuB,MAG5CvF,EAAEmG,IAAS,UAEXzB,EAAS1F,IAAO2H,EACfhF,EAAS3C,IACT0F,EACA/C,EACApC,EACAgC,EACAC,EACAlB,EACAmB,IAIGkD,EAAM3H,EAAQ4J,SAASjC,EAAID,GAC/B,MAAOF,GACRxH,EAAQ6J,IAAYrC,EAAGE,EAAU/C,UAG3B+C,EAAS1F,IAQV,SAASmC,EAAWb,EAAawG,GACnC9J,EAAQ+J,KAAS/J,EAAQ+J,IAAQD,EAAMxG,GAE3CA,EAAY0G,KAAK,SAAAhH,OAEfM,EAAcN,EAAE8F,IAChB9F,EAAE8F,IAAmB,GACrBxF,EAAY0G,KAAK,SAAAC,GAChBA,EAAGC,KAAKlH,KAER,MAAOwE,GACRxH,EAAQ6J,IAAYrC,EAAGxE,EAAEa,QAmB5B,SAAS8F,EACR5D,EACA2B,EACA/C,EACApC,EACAgC,EACAC,EACAlB,EACAmB,GARD,IAUKnE,EASIuC,EAyCHsH,EACAC,EAOO9J,EAzDR2F,EAAWtB,EAAS/D,MACpBoF,EAAW0B,EAAS9G,SAGxB2D,EAA0B,QAAlBmD,EAASxG,MAAkBqD,EAExB,MAAPwB,GAAoC,MAArBvB,MACblE,EAAI,EAAGA,EAAIkE,EAAkBjD,OAAQjB,OAI/B,OAHJuC,EAAQ2B,EAAkBlE,MAIZ,OAAlBoH,EAASxG,KACY,IAAnB2B,EAAMwH,SACNxH,EAAMyH,YAAc5C,EAASxG,MAC/B,CACD6E,EAAMlD,EACN2B,EAAkBlE,GAAK,cAMf,MAAPyF,EAAa,IACM,OAAlB2B,EAASxG,YACLqJ,SAASC,eAAexE,GAEhCD,EAAMxB,EACHgG,SAASE,gBAAgB,6BAA8B/C,EAASxG,MAChEqJ,SAAStJ,cAAcyG,EAASxG,MAEnCsD,EAAoB,QAGC,OAAlBkD,EAASxG,KACa,MAArBsD,IACHA,EAAkBA,EAAkB9B,QAAQqD,IAAQ,MAGjDE,IAAaD,IAChBD,EAAI2E,KAAO1E,QAEN,GAAI0B,IAAa/C,EAAU,IACR,MAArBH,IACHA,EAAoBhE,EAAUuG,MAAMmD,KAAKnE,EAAI4E,aAK1CR,GAFJlE,EAAWtB,EAAS/D,OAASL,GAENqK,wBACnBR,EAAUpE,EAAS4E,yBAIlBnG,EAAa,IACbwB,IAAa1F,MAChB0F,EAAW,GACF3F,EAAI,EAAGA,EAAIyF,EAAI8E,WAAWtJ,OAAQjB,IAC1C2F,EAASF,EAAI8E,WAAWvK,GAAGiG,MAAQR,EAAI8E,WAAWvK,GAAGiF,OAInD6E,GAAWD,KAETC,GAAYD,GAAWC,EAAQU,QAAUX,EAAQW,SACrD/E,EAAIgF,UAAaX,GAAWA,EAAQU,QAAW,KAKlDhF,EAAUC,EAAKC,EAAUC,EAAU1B,EAAOE,GAE1CiD,EAAS7F,IAAY6F,EAAS9G,MAAMO,SAG/BiJ,GACJhG,EACC2B,EACA2B,EACA/C,EACApC,EACkB,kBAAlBmF,EAASxG,MAAmCqD,EAC5CC,EACAlB,EACA/C,EACAkE,GAKGA,IAEH,UAAWuB,QACQtE,IAAnBsE,EAAST,OACTS,EAAST,QAAUQ,EAAIR,QAEvBQ,EAAIR,MAA0B,MAAlBS,EAAST,MAAgB,GAAKS,EAAST,OAGnD,YAAaS,QACQtE,IAArBsE,EAASgF,SACThF,EAASgF,UAAYjF,EAAIiF,UAEzBjF,EAAIiF,QAAUhF,EAASgF,iBAKnBjF,EASR,SAAgBN,EAASrE,EAAKmE,EAAO3D,OAEjB,mBAAPR,EAAmBA,EAAImE,GAC7BnE,EAAI6J,QAAU1F,EAClB,MAAOiC,GACRxH,EAAQ6J,IAAYrC,EAAG5F,IAYzB,SAAgB4D,EAAQ5D,EAAOsJ,EAAaC,GAA5C,IACKC,EAOArF,EAoBMzF,KA1BNN,EAAQwF,SAASxF,EAAQwF,QAAQ5D,IAEhCwJ,EAAIxJ,EAAMR,MACdqE,EAAS2F,EAAG,KAAMF,GAIdC,GAAoC,mBAAfvJ,EAAMV,OAC/BiK,EAAmC,OAArBpF,EAAMnE,EAAMI,MAG3BJ,EAAMI,IAAOJ,EAAMK,IAAgB,KAEL,OAAzBmJ,EAAIxJ,EAAMM,KAAqB,IAC/BkJ,EAAEC,yBAEJD,EAAEC,uBACD,MAAO7D,GACRxH,EAAQ6J,IAAYrC,EAAG0D,GAIzBE,EAAEtI,KAAOsI,EAAErH,IAAa,QAGpBqH,EAAIxJ,EAAMC,QACLvB,EAAI,EAAGA,EAAI8K,EAAE7J,OAAQjB,IACzB8K,EAAE9K,IAAIkF,EAAQ4F,EAAE9K,GAAI4K,EAAaC,GAI5B,MAAPpF,GAAalF,EAAWkF,GAI7B,SAAS4C,EAAS/H,EAAOiI,EAAOtG,UACxB+I,KAAKnJ,YAAYvB,EAAO2B,GL1ahC,SAAgBmG,EAAO9G,EAAO6B,EAAW8H,GAAzC,IAGK9G,EACAE,EAKArB,EARAtD,EAAQwL,IAAOxL,EAAQwL,GAAM5J,EAAO6B,GAGpCkB,GADAF,EAAc8G,IAAgBlL,GAE/B,KACCkL,GAAeA,EAAY1J,KAAc4B,EAAU5B,IACvDD,EAAQX,EAAcoB,EAAU,KAAM,CAACT,IAEnC0B,EAAc,GAClBU,EACCP,GACEgB,EAAchB,EAAY8H,GAAe9H,GAAW5B,IAAYD,EAClE+C,GAAYpE,EACZA,OAC8BmB,IAA9B+B,EAAUS,gBACVqH,IAAgB9G,EACb,CAAC8G,GACD5G,EACA,KACAnE,EAAUuG,MAAMmD,KAAKzG,EAAUkH,YAClCrH,EACAiI,GAAehL,EACfkE,GAEDN,EAAWb,EAAa1B,GASlB,SAASsE,EAAQtE,EAAO6B,GAC9BiF,EAAO9G,EAAO6B,EAAWpD,GMxCnB,SAASoL,EAAa7J,EAAOhB,UACnCA,EAAQF,EAAOA,EAAO,GAAIkB,EAAMhB,OAAQA,GACpCU,UAAUC,OAAS,IAAGX,EAAMO,SAAWX,EAAUuG,MAAMmD,KAAK5I,UAAW,IACpEK,EACNC,EAAMV,KACNN,EACAA,EAAMS,KAAOO,EAAMP,IACnBT,EAAMQ,KAAOQ,EAAMR,KLbd,SAASsK,EAAcC,GAAvB,IACAC,EAAM,GAENrJ,EAAU,CACf8F,IAAK,OAAS/H,IACdgI,GAAeqD,EACfE,kBAASjL,EAAO2B,UACR3B,EAAMO,SAASoB,IAEvBuJ,kBAASlL,OAEDmL,gBADFT,KAAK7B,kBACHsC,EAAO,QACRtC,gBAAkB,kBACtBmC,EAAIrJ,EAAQ8F,KAAO2D,EACZJ,QAEHvC,sBAAwB,SAAA4C,GACxBrL,EAAM2E,QAAU0G,EAAO1G,OAC1BwG,EAAK/B,KAAK,SAAAhH,GACTA,EAAET,QAAU0J,EAAO1G,MACnBxC,EAAcC,WAIZ4F,IAAM,SAAA5F,GACV+I,EAAKvK,KAAKwB,OACNkJ,EAAMlJ,EAAEqI,qBACZrI,EAAEqI,qBAAuB,WACxBU,EAAKI,OAAOJ,EAAKrJ,QAAQM,GAAI,GAC7BkJ,GAAOA,EAAIhC,KAAKlH,MAIZpC,EAAMO,kBAIfoB,EAAQsJ,SAASzD,YAAc7F,EAExBA,EJxCFvC,EAAU,CACf6J,IUKM,SAAqBuC,EAAOxK,WAE9ByB,EAEIzB,EAAQA,EAAME,QAChBuB,EAAYzB,EAAMM,OAAgBmB,EAAUkF,UAG9ClF,EAAUlB,aACwC,MAAlDkB,EAAUlB,YAAYkK,yBAEtBhJ,EAAUiJ,SACTjJ,EAAUlB,YAAYkK,yBAAyBD,QAE1C,CAAA,GAAmC,MAA/B/I,EAAUkJ,2BACpBlJ,EAAUkJ,kBAAkBH,UAItBrJ,EAAeM,EAAUmF,IAAgBnF,GAC/C,MAAOmE,GACR4E,EAAQ5E,QAKL4E,IToDMnM,EAAiB,SAAA2B,UACpB,MAATA,QAAuCF,IAAtBE,EAAMO,aC/DxBG,EAAUmG,UAAU6D,SAAW,SAASE,EAAQ9G,OAE3Ce,EAEHA,EADG6E,KAAKvC,MAAeuC,KAAKzC,MACxByC,KAAKvC,IAELuC,KAAKvC,IAAarI,EAAO,GAAI4K,KAAKzC,OAGlB,mBAAV2D,IACVA,EAASA,EAAO/F,EAAG6E,KAAK1K,QAGrB4L,GACH9L,EAAO+F,EAAG+F,GAIG,MAAVA,GAEAlB,KAAKzH,WACHsF,KAAS,EACVzD,GAAU4F,KAAKxC,IAAiBtH,KAAKkE,GACzC3C,EAAcuI,QAShBhJ,EAAUmG,UAAUgE,YAAc,SAAS/G,GACtC4F,KAAKzH,WAIHsF,KAAS,EACVzD,GAAU4F,KAAKxC,IAAiBtH,KAAKkE,GACzC3C,EAAcuI,QAchBhJ,EAAUmG,UAAUC,OAASrG,EAqFzBnC,EAAI,GAQFC,EACa,mBAAXuM,QACJA,QAAQjE,UAAUkE,KAAKC,KAAKF,QAAQG,WACpCC,WCzKEzM,EAAaE,ECHRD,EAAI"}