import { OnDragStart, OnDrag, OnDragEnd, OnResizeStart, OnResize, OnResizeEnd, OnScaleStart, OnScale, OnScaleEnd, OnWarpStart, OnWarp, OnWarpEnd, OnPinchStart, OnPinch, OnPinchEnd, OnRotateStart, OnRotate, OnRotateEnd, OnDragGroupStart, OnDragGroup, OnDragGroupEnd, OnResizeGroupStart, OnResizeGroup, OnResizeGroupEnd, OnScaleGroupStart, OnScaleGroup, OnScaleGroupEnd, OnRotateGroupStart, OnRotateGroup, OnRotateGroupEnd, OnPinchGroupStart, OnPinchGroup, OnPinchGroupEnd, OnClickGroup, OnRenderStart, OnRender, OnRenderEnd, OnScroll, OnScrollGroup, OnRenderGroupStart, OnRenderGroup, OnRenderGroupEnd, OnClick, Able } from "react-moveable/declaration/types";
export interface MoveableOptions {
    draggable?: boolean;
    resizable?: boolean;
    scalable?: boolean;
    rotatable?: boolean;
    warpable?: boolean;
    pinchable?: boolean | Array<"rotatable" | "resizable" | "scalable">;
    snappable?: boolean | string[];
    ables?: Able[];
    origin?: boolean;
    className?: string;
    target?: SVGElement | HTMLElement | Array<SVGElement | HTMLElement>;
    container?: SVGElement | HTMLElement | null;
    throttleDrag?: number;
    throttleResize?: number;
    throttleScale?: number;
    throttleRotate?: number;
    keepRatio?: boolean;
    edge?: boolean;
    pinchThreshold?: number;
    snapCenter?: boolean;
    snapThreshold?: number;
    horizontalGuidelines?: number[];
    verticalGuidelines?: number[];
    elementGuidelines?: Element[];
    bounds?: {
        left?: number;
        top?: number;
        right?: number;
        bottom?: number;
    };
    dragArea?: boolean;
    rotationPosition?: "top" | "bottom" | "left" | "right";
    baseDirection?: number[];
    renderDirections?: string[];
    defaultGroupRotate?: boolean;
    scrollable?: boolean;
    scrollContainer?: HTMLElement;
    scrollThreshold?: number;
    getScrollPosition?: (e: {
        scrollContainer: HTMLElement;
        direction: number[];
    }) => number[];
}
export interface MoveableGetterSetter extends Pick<MoveableOptions, Exclude<keyof MoveableOptions, "container">> {
}
export interface MoveableEvents {
    dragStart: OnDragStart;
    drag: OnDrag;
    dragEnd: OnDragEnd;
    dragGroupStart: OnDragGroupStart;
    dragGroup: OnDragGroup;
    dragGroupEnd: OnDragGroupEnd;
    resizeStart: OnResizeStart;
    resize: OnResize;
    resizeEnd: OnResizeEnd;
    resizeGroupStart: OnResizeGroupStart;
    resizeGroup: OnResizeGroup;
    resizeGroupEnd: OnResizeGroupEnd;
    scaleStart: OnScaleStart;
    scale: OnScale;
    scaleEnd: OnScaleEnd;
    scaleGroupStart: OnScaleGroupStart;
    scaleGroup: OnScaleGroup;
    scaleGroupEnd: OnScaleGroupEnd;
    rotateStart: OnRotateStart;
    rotate: OnRotate;
    rotateEnd: OnRotateEnd;
    rotateGroupStart: OnRotateGroupStart;
    rotateGroup: OnRotateGroup;
    rotateGroupEnd: OnRotateGroupEnd;
    warpStart: OnWarpStart;
    warp: OnWarp;
    warpEnd: OnWarpEnd;
    pinchStart: OnPinchStart;
    pinch: OnPinch;
    pinchEnd: OnPinchEnd;
    renderStart: OnRenderStart;
    render: OnRender;
    renderEnd: OnRenderEnd;
    renderGroupStart: OnRenderGroupStart;
    renderGroup: OnRenderGroup;
    renderGroupEnd: OnRenderGroupEnd;
    pinchGroupStart: OnPinchGroupStart;
    pinchGroup: OnPinchGroup;
    pinchGroupEnd: OnPinchGroupEnd;
    click: OnClick;
    clickGroup: OnClickGroup;
    scroll: OnScroll;
    scrollGroup: OnScrollGroup;
}
