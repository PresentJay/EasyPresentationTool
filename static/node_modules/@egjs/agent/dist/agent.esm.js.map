{"version":3,"file":"agent.esm.js","sources":["../src/browser.js","../src/parseRules.js","../src/Parser.js","../src/Agent.js"],"sourcesContent":["const win = (typeof window !== `undefined` && window) || {};\nconst RegExp = win.RegExp;\nconst navigator = win.navigator;\n\nexport {\n\tRegExp,\n\tnavigator,\n};\n","const parseRules = {\n\tbrowser: [{\n\t\tcriteria: \"PhantomJS\",\n\t\tidentity: \"PhantomJS\",\n\t}, {\n\t\tcriteria: /Whale/,\n\t\tidentity: \"Whale\",\n\t\tversionSearch: \"Whale\",\n\t}, {\n\t\tcriteria: /Edge/,\n\t\tidentity: \"Edge\",\n\t\tversionSearch: \"Edge\",\n\t}, {\n\t\tcriteria: /MSIE|Trident|Windows Phone/,\n\t\tidentity: \"IE\",\n\t\tversionSearch: \"IEMobile|MSIE|rv\",\n\t}, {\n\t\tcriteria: /MiuiBrowser/,\n\t\tidentity: \"MIUI Browser\",\n\t\tversionSearch: \"MiuiBrowser\",\n\t}, {\n\t\tcriteria: /SamsungBrowser/,\n\t\tidentity: \"Samsung Internet\",\n\t\tversionSearch: \"SamsungBrowser\",\n\t}, {\n\t\tcriteria: /SAMSUNG /,\n\t\tidentity: \"Samsung Internet\",\n\t\tversionSearch: \"Version\",\n\t}, {\n\t\tcriteria: /Chrome|CriOS/,\n\t\tidentity: \"Chrome\",\n\t}, {\n\t\tcriteria: /Android/,\n\t\tidentity: \"Android Browser\",\n\t\tversionSearch: \"Version\",\n\t}, {\n\t\tcriteria: /iPhone|iPad/,\n\t\tidentity: \"Safari\",\n\t\tversionSearch: \"Version\",\n\t}, {\n\t\tcriteria: \"Apple\",\n\t\tidentity: \"Safari\",\n\t\tversionSearch: \"Version\",\n\t}, {\n\t\tcriteria: \"Firefox\",\n\t\tidentity: \"Firefox\",\n\t}],\n\tos: [{\n\t\tcriteria: /Windows Phone/,\n\t\tidentity: \"Windows Phone\",\n\t\tversionSearch: \"Windows Phone\",\n\t},\n\t{\n\t\tcriteria: \"Windows 2000\",\n\t\tidentity: \"Window\",\n\t\tversionAlias: \"5.0\",\n\t},\n\t{\n\t\tcriteria: /Windows NT/,\n\t\tidentity: \"Window\",\n\t\tversionSearch: \"Windows NT\",\n\t}, {\n\t\tcriteria: /iPhone|iPad/,\n\t\tidentity: \"iOS\",\n\t\tversionSearch: \"iPhone OS|CPU OS\",\n\t}, {\n\t\tcriteria: \"Mac\",\n\t\tversionSearch: \"OS X\",\n\t\tidentity: \"MAC\",\n\t}, {\n\t\tcriteria: /Android/,\n\t\tidentity: \"Android\",\n\t}, {\n\t\tcriteria: /Tizen/,\n\t\tidentity: \"Tizen\",\n\t}, {\n\t\tcriteria: /Web0S/,\n\t\tidentity: \"WebOS\",\n\t}],\n\n\t// Webview check condition\n\t// ios: If has no version information\n\t// Android 5.0 && chrome 40+: Presence of \"; wv\" in userAgent\n\t// Under android 5.0: Presence of \"NAVER\" or \"Daum\" in userAgent\n\twebview: [{\n\t\tcriteria: /iPhone|iPad/,\n\t\tbrowserVersionSearch: \"Version\",\n\t\twebviewBrowserVersion: /-1/,\n\t}, {\n\t\tcriteria: /iPhone|iPad|Android/,\n\t\twebviewToken: /NAVER|DAUM|; wv/,\n\n\t}],\n\tdefaultString: {\n\t\tbrowser: {\n\t\t\tversion: \"-1\",\n\t\t\tname: \"unknown\",\n\t\t},\n\t\tos: {\n\t\t\tversion: \"-1\",\n\t\t\tname: \"unknown\",\n\t\t},\n\t},\n};\n\nexport default parseRules;\n","import parseRules from \"./parseRules\";\n\nfunction filter(arr, compare) {\n\tconst result = [];\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tcompare(arr[i]) && result.push(arr[i]);\n\t}\n\treturn result;\n}\n\nfunction some(arr, compare) {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (compare(arr[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nlet UA;\n\nfunction setUa(ua) {\n\tUA = ua;\n}\n\nfunction isMatched(base, target) {\n\treturn target &&\n\t\ttarget.test ? !!target.test(base) : base.indexOf(target) > -1;\n}\n\nfunction getIdentityStringFromArray(rules, defaultStrings) {\n\tconst matchedRule = filter(rules, rule => isMatched(UA, rule.criteria))[0];\n\n\treturn (matchedRule && matchedRule.identity) || defaultStrings.name;\n}\n\nfunction getRule(rules, targetIdentity) {\n\treturn filter(rules, rule => {\n\t\tconst criteria = rule.criteria;\n\t\tconst identityMatched = new RegExp(rule.identity, \"i\").test(targetIdentity);\n\n\t\tif (criteria ?\n\t\t\tidentityMatched && isMatched(UA, criteria) :\n\t\t\tidentityMatched) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t})[0];\n}\n\nfunction getBrowserName() {\n\treturn getIdentityStringFromArray(parseRules.browser, parseRules.defaultString.browser);\n}\n\nfunction getBrowserRule(browserName) {\n\tlet rule = getRule(parseRules.browser, browserName);\n\n\tif (!rule) {\n\t\trule = {\n\t\t\tcriteria: browserName,\n\t\t\tversionSearch: browserName,\n\t\t\tidentity: browserName,\n\t\t};\n\t}\n\n\treturn rule;\n}\n\nfunction extractBrowserVersion(versionToken, ua) {\n\tlet browserVersion = parseRules.defaultString.browser.version;\n\tconst versionRegexResult =\n\t\t(new RegExp(`(${versionToken})`, \"i\")).exec(ua);\n\n\tif (!versionRegexResult) {\n\t\treturn browserVersion;\n\t}\n\n\tconst versionTokenIndex = versionRegexResult.index;\n\tconst verTkn = versionRegexResult[0];\n\n\tif (versionTokenIndex > -1) {\n\t\tconst versionIndex = versionTokenIndex + verTkn.length + 1;\n\n\t\tbrowserVersion = ua.substring(versionIndex)\n\t\t\t.split(\" \")[0]\n\t\t\t.replace(/_/g, \".\")\n\t\t\t.replace(/;|\\)/g, \"\");\n\t}\n\treturn browserVersion;\n}\n\nfunction getBrowserVersion(browserName) {\n\tif (!browserName) {\n\t\treturn undefined;\n\t}\n\n\t// console.log(browserRule);\n\t// const versionToken = browserRule ? browserRule.versionSearch : browserName;\n\tconst browserRule = getBrowserRule(browserName);\n\tconst versionToken = browserRule.versionSearch || browserName;\n\tconst browserVersion = extractBrowserVersion(versionToken, UA);\n\n\treturn browserVersion;\n}\n\nfunction isWebview() {\n\tconst webviewRules = parseRules.webview;\n\tlet browserVersion;\n\n\treturn some(\n\t\t\tfilter(webviewRules, rule => isMatched(UA, rule.criteria)),\n\t\t\trule => {\n\t\t\t\tbrowserVersion =\n\t\t\t\t\textractBrowserVersion(rule.browserVersionSearch, UA);\n\t\t\t\tif (isMatched(UA, rule.webviewToken) ||\n\t\t\t\t\tisMatched(browserVersion, rule.webviewBrowserVersion)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n}\n\nfunction getOSRule(osName) {\n\treturn getRule(parseRules.os, osName);\n}\n\nfunction getOsName() {\n\treturn getIdentityStringFromArray(parseRules.os, parseRules.defaultString.os);\n}\n\nfunction getOsVersion(osName) {\n\tconst osRule = getOSRule(osName) || {};\n\tconst defaultOSVersion = parseRules.defaultString.os.version;\n\tlet osVersion;\n\n\tif (!osName) {\n\t\treturn undefined;\n\t}\n\tif (osRule.versionAlias) {\n\t\treturn osRule.versionAlias;\n\t}\n\tconst osVersionToken = osRule.versionSearch || osName;\n\tconst osVersionRegex =\n\t\tnew RegExp(`(${osVersionToken})\\\\s([\\\\d_\\\\.]+|\\\\d_0)`, \"i\");\n\tconst osVersionRegexResult = osVersionRegex.exec(UA);\n\n\tif (osVersionRegexResult) {\n\t\tosVersion = osVersionRegex.exec(UA)[2].replace(/_/g, \".\")\n\t\t\t\t\t\t\t\t\t\t\t.replace(/;|\\)/g, \"\");\n\t}\n\treturn osVersion || defaultOSVersion;\n}\n\nfunction getOs() {\n\tconst name = getOsName();\n\tconst version = getOsVersion(name);\n\n\treturn {name, version};\n}\n\nfunction getBrowser() {\n\tconst name = getBrowserName();\n\tconst version = getBrowserVersion(name);\n\n\treturn {name, version, webview: isWebview()};\n}\n\nfunction getIsMobile() {\n\treturn UA.indexOf(\"Mobi\") !== -1;\n}\n\nexport {\n\tgetOs,\n\tgetBrowser,\n\tgetIsMobile,\n\tsetUa,\n};\n","/**\n * Copyright (c) NAVER Corp.\n * egjs-agent projects are licensed under the MIT license\n */\nimport {navigator} from \"./browser\";\nimport {setUa, getOs, getBrowser, getIsMobile} from \"./Parser\";\n\n/**\n * @namespace eg.agent\n */\n/**\n * Extracts browser and operating system information from the user agent string.\n * @ko 유저 에이전트 문자열에서 브라우저와 운영체제 정보를 추출한다.\n * @function eg.agent#agent\n * @param {String} [userAgent=navigator.userAgent] user agent string to parse <ko>파싱할 유저에이전트 문자열</ko>\n * @return {Object} agentInfo\n * @return {Object} agentInfo.os os Operating system information <ko>운영체제 정보</ko>\n * @return {String} agentInfo.os.name Operating system name (android, ios, window, mac, unknown) <ko>운영체제 이름 (android, ios, window, mac, unknown)</ko>\n * @return {String} agentInfo.os.version Operating system version <ko>운영체제 버전</ko>\n * @return {String} agentInfo.browser Browser information <ko>브라우저 정보</ko>\n * @return {String} agentInfo.browser.name Browser name (safari, chrome, sbrowser, ie, firefox, unknown) <ko>브라우저 이름 (safari, chrome, sbrowser, ie, firefox, unknown)</ko>\n * @return {String} agentInfo.browser.version Browser version <ko>브라우저 버전 </ko>\n * @return {Boolean} agentInfo.browser.webview Indicates whether the browser is inapp<ko>웹뷰 브라우저 여부</ko>\n * @return {Boolean} agentInfo.isMobile Indicates whether the browser is for mobile<ko>모바일 브라우저 여부</ko>\n * @example\nimport agent from \"@egjs/agent\";\n\nconst {os, browser, isMobile} = agent();\n */\nfunction agent(ua = navigator.userAgent) {\n\tsetUa(ua);\n\n\tconst agentInfo = {\n\t\tos: getOs(),\n\t\tbrowser: getBrowser(),\n\t\tisMobile: getIsMobile(),\n\t};\n\n\tagentInfo.browser.name = agentInfo.browser.name.toLowerCase();\n\tagentInfo.os.name = agentInfo.os.name.toLowerCase();\n\tagentInfo.os.version = agentInfo.os.version.toLowerCase();\n\n\tif (agentInfo.os.name === \"ios\" && agentInfo.browser.webview) {\n\t\tagentInfo.browser.version = \"-1\";\n\t}\n\n\treturn agentInfo;\n}\n/**\n * Version info string\n * @ko 버전정보 문자열\n * @name VERSION\n * @static\n * @type {String}\n * @example\n * eg.agent.VERSION;  // ex) 2.2.0\n * @memberof eg.agent\n */\nagent.VERSION = \"#__VERSION__#\";\nexport default agent;\n"],"names":["win","window","RegExp","navigator","parseRules","filter","arr","compare","result","i","length","push","some","UA","setUa","ua","isMatched","base","target","test","indexOf","getIdentityStringFromArray","rules","defaultStrings","matchedRule","rule","criteria","identity","name","getRule","targetIdentity","identityMatched","getBrowserName","browser","defaultString","getBrowserRule","browserName","extractBrowserVersion","versionToken","browserVersion","version","versionRegexResult","exec","versionTokenIndex","index","verTkn","versionIndex","substring","split","replace","getBrowserVersion","undefined","browserRule","versionSearch","isWebview","webviewRules","webview","browserVersionSearch","webviewToken","webviewBrowserVersion","getOSRule","osName","os","getOsName","getOsVersion","osRule","defaultOSVersion","osVersion","versionAlias","osVersionToken","osVersionRegex","osVersionRegexResult","getOs","getBrowser","getIsMobile","agent","userAgent","agentInfo","toLowerCase","VERSION"],"mappings":"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"}