{"version":3,"file":"component.min.js","sources":["../src/Component.js"],"sourcesContent":["/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n\nfunction isUndefined(value) {\n\treturn typeof value === \"undefined\";\n}\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n * @alias eg.Component\n */\nclass Component {\n\t/**\n * Version info string\n * @ko 버전정보 문자열\n * @name VERSION\n * @static\n * @type {String}\n * @example\n * eg.Component.VERSION;  // ex) 2.0.0\n * @memberof eg.Component\n */\n\tstatic VERSION = \"#__VERSION__#\";\n\t/**\n\t * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n\t */\n\tconstructor() {\n\t\tthis._eventHandler = {};\n\t\tthis.options = {};\n\t}\n\t/**\n\t * Triggers a custom event.\n\t * @ko 커스텀 이벤트를 발생시킨다\n\t * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n\t * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n\t * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">Ref</a> <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">참고</a></ko>\n\t * @example\n\nclass Some extends eg.Component {\n  some(){\n  \tif(this.trigger(\"beforeHi\")){ // When event call to stop return false.\n\t\tthis.trigger(\"hi\");// fire hi event.\n  \t}\n  }\n}\n\nconst some = new Some();\nsome.on(\"beforeHi\", (e) => {\n\tif(condition){\n\t\te.stop(); // When event call to stop, `hi` event not call.\n\t}\n});\nsome.on(\"hi\", (e) => {\n\t// `currentTarget` is component instance.\n\tconsole.log(some === e.currentTarget); // true\n});\n// If you want to more know event design. You can see article.\n// https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n\t */\n\ttrigger(eventName, customEvent = {}, ...restParam) {\n\t\tlet handlerList = this._eventHandler[eventName] || [];\n\t\tconst hasHandlerList = handlerList.length > 0;\n\n\t\tif (!hasHandlerList) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If detach method call in handler in first time then handler list calls.\n\t\thandlerList = handlerList.concat();\n\n\t\tcustomEvent.eventType = eventName;\n\n\t\tlet isCanceled = false;\n\t\tlet arg = [customEvent];\n\t\tlet i = 0;\n\n\t\tcustomEvent.stop = () => { isCanceled = true; };\n\t\tcustomEvent.currentTarget = this;\n\n\t\tif (restParam.length >= 1) {\n\t\t\targ = arg.concat(restParam);\n\t\t}\n\n\t\tfor (i = 0; handlerList[i]; i++) {\n\t\t\thandlerList[i].apply(this, arg);\n\t\t}\n\n\t\treturn !isCanceled;\n\t}\n\t/**\n\t * Executed event just one time.\n\t * @ko 이벤트가 한번만 실행된다.\n\t * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n\t * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n\t * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n\t * @example\nclass Some extends eg.Component {\n  hi() {\n    alert(\"hi\");\n  }\n  thing() {\n    this.once(\"hi\", this.hi);\n  }\n}\n\nvar some = new Some();\nsome.thing();\nsome.trigger(\"hi\");\n// fire alert(\"hi\");\nsome.trigger(\"hi\");\n// Nothing happens\n\t */\n\tonce(eventName, handlerToAttach) {\n\t\tif (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n\t\t\tconst eventHash = eventName;\n\t\t\tlet i;\n\n\t\t\tfor (i in eventHash) {\n\t\t\t\tthis.once(i, eventHash[i]);\n\t\t\t}\n\t\t\treturn this;\n\t\t} else if (typeof eventName === \"string\" &&\n\t\t\ttypeof handlerToAttach === \"function\") {\n\t\t\tconst self = this;\n\n\t\t\tthis.on(eventName, function listener(...arg) {\n\t\t\t\thandlerToAttach.apply(self, arg);\n\t\t\t\tself.off(eventName, listener);\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks whether an event has been attached to a component.\n\t * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n\t * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n\t * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n\t * @example\nclass Some extends eg.Component {\n  some() {\n    this.hasOn(\"hi\");// check hi event.\n  }\n}\n\t */\n\thasOn(eventName) {\n\t\treturn !!this._eventHandler[eventName];\n\t}\n\n\t/**\n\t * Attaches an event to a component.\n\t * @ko 컴포넌트에 이벤트를 등록한다.\n\t * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n\t * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n\t * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n\t * @example\nclass Some extends eg.Component {\n  hi() {\n    console.log(\"hi\");\n  }\n  some() {\n    this.on(\"hi\",this.hi); //attach event\n  }\n}\n*/\n\ton(eventName, handlerToAttach) {\n\t\tif (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n\t\t\tconst eventHash = eventName;\n\t\t\tlet name;\n\n\t\t\tfor (name in eventHash) {\n\t\t\t\tthis.on(name, eventHash[name]);\n\t\t\t}\n\t\t\treturn this;\n\t\t} else if (typeof eventName === \"string\" &&\n\t\t\ttypeof handlerToAttach === \"function\") {\n\t\t\tlet handlerList = this._eventHandler[eventName];\n\n\t\t\tif (isUndefined(handlerList)) {\n\t\t\t\tthis._eventHandler[eventName] = [];\n\t\t\t\thandlerList = this._eventHandler[eventName];\n\t\t\t}\n\n\t\t\thandlerList.push(handlerToAttach);\n\t\t}\n\n\t\treturn this;\n\t}\n\t/**\n\t * Detaches an event from the component.\n\t * @ko 컴포넌트에 등록된 이벤트를 해제한다\n\t * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n\t * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n\t * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n\t * @example\nclass Some extends eg.Component {\n  hi() {\n    console.log(\"hi\");\n  }\n  some() {\n    this.off(\"hi\",this.hi); //detach event\n  }\n}\n\t */\n\toff(eventName, handlerToDetach) {\n\t\t// All event detach.\n\t\tif (isUndefined(eventName)) {\n\t\t\tthis._eventHandler = {};\n\t\t\treturn this;\n\t\t}\n\n\t\t// All handler of specific event detach.\n\t\tif (isUndefined(handlerToDetach)) {\n\t\t\tif (typeof eventName === \"string\") {\n\t\t\t\tthis._eventHandler[eventName] = undefined;\n\t\t\t\treturn this;\n\t\t\t} else {\n\t\t\t\tconst eventHash = eventName;\n\t\t\t\tlet name;\n\n\t\t\t\tfor (name in eventHash) {\n\t\t\t\t\tthis.off(name, eventHash[name]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\n\t\t// The handler of specific event detach.\n\t\tlet handlerList = this._eventHandler[eventName];\n\n\t\tif (handlerList) {\n\t\t\tlet k;\n\t\t\tlet handlerFunction;\n\n\t\t\tfor (k = 0; (handlerFunction = handlerList[k]) !== undefined; k++) {\n\t\t\t\tif (handlerFunction === handlerToDetach) {\n\t\t\t\t\thandlerList = handlerList.splice(k, 1);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nexport default Component;\n"],"names":["isUndefined","value","Component","_eventHandler","options","trigger","eventName","customEvent","handlerList","this","length","concat","eventType","isCanceled","arg","i","stop","currentTarget","restParam","apply","once","handlerToAttach","eventHash","self","on","listener","off","hasOn","name","push","handlerToDetach","undefined","k","handlerFunction","splice","VERSION"],"mappings":";;;;;;;;;wMAMA,SAASA,EAAYC,eACI,IAAVA,wBAOTC,+BAgBCC,cAAgB,QAChBC,QAAU,8BA+BhBC,iBAAQC,EAAWC,YAAAA,IAAAA,EAAc,QAC5BC,EAAcC,KAAKN,cAAcG,IAAc,QACP,EAArBE,EAAYE,eAG3B,4EAIRF;EAAcA,EAAYG,SAE1BJ,EAAYK,UAAYN,MAEpBO,GAAa,EACbC,EAAM,CAACP,GACPQ,EAAI,EAERR,EAAYS,KAAO,WAAQH,GAAa,GACxCN,EAAYU,cAAgBR,gCAlBWS,mCAAAA,wBAoBf,GAApBA,EAAUR,SACbI,EAAMA,EAAIH,OAAOO,IAGbH,EAAI,EAAGP,EAAYO,GAAIA,IAC3BP,EAAYO,GAAGI,MAAMV,KAAMK,UAGpBD,KAyBTO,cAAKd,EAAWe,MACU,iBAAdf,GAA0BN,EAAYqB,GAAkB,KAE9DN,EADEO,EAAYhB,MAGbS,KAAKO,OACJF,KAAKL,EAAGO,EAAUP,WAEjBN,KACD,GAAyB,iBAAdH,GACU,mBAApBe,EAAgC,KACjCE,EAAOd,UAERe,GAAGlB,EAAW,SAASmB,+BAAYX,2BAAAA,kBACvCO,EAAgBF,MAAMI,EAAMT,GAC5BS,EAAKG,IAAIpB,EAAWmB,YAIfhB,QAeRkB,eAAMrB,WACIG,KAAKN,cAAcG,MAmB7BkB,YAAGlB,EAAWe,MACY,iBAAdf,GAA0BN,EAAYqB,GAAkB,KAE9DO,EADEN,EAAYhB,MAGbsB,KAAQN,OACPE,GAAGI,EAAMN,EAAUM,WAElBnB,KACD,GAAyB,iBAAdH,GACU,mBAApBe,EAAgC,KACnCb,EAAcC,KAAKN,cAAcG,GAEjCN,EAAYQ,UACVL,cAAcG,GAAa,GAChCE,EAAcC,KAAKN,cAAcG,IAGlCE,EAAYqB,KAAKR,UAGXZ,QAkBRiB,aAAIpB,EAAWwB;;GAEV9B,EAAYM,eACVH,cAAgB,GACdM;GAIJT,EAAY8B,GAAkB,IACR,iBAAdxB,cACLH,cAAcG,QAAayB,EACzBtB,SAGHmB,EADEN,EAAYhB,MAGbsB,KAAQN,OACPI,IAAIE,EAAMN,EAAUM,WAEnBnB;IAQJuB,EACAC,EAJDzB,EAAcC,KAAKN,cAAcG,MAEjCE,MAIEwB,EAAI,OAA0CD,KAAtCE,EAAkBzB,EAAYwB,IAAmBA,OACzDC,IAAoBH,EAAiB,CACxCtB,EAAcA,EAAY0B,OAAOF,EAAG,gBAMhCvB,kBAxOHP,EAWEiC,QAAU,QAXZjC"}